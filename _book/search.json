[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"“Scientific etiquette demands field defined study begun”-R R Sokal. Bios means “life” metron means “measure”.","code":""},{"path":"r-basics.html","id":"r-basics","chapter":"2 r Basics","heading":"2 r Basics","text":"find working directory & setwd Rchange backtab key popout list things may looking entering\nfirst 1-2 alphabetssave projectmyrstats<-save.image(“myrstats.rData”)Essential packagesx object containing variable 2y object containing variable “male”\nx numeric/integer “male” factor/characterconcatenation: string interconnected thingsdifferent methods producing concatenated vectorswe can also create repeated sequence Rextracting elements concatenated stringMatrix elements\nVector list numbers/characters\nMatrix array numbers/characters raws columnssimilar vectors, matrix can subsetteddata_frame type matrix\ncan create data_frame R can import\nCreating data_frame\nfirst create concatenated strings variableR recognizes number series, covert factorsubsetting can done. important remember specify column blank coma","code":"\n  \ngetwd()\n#> [1] \"/Users/drkmenon/Sync/books/biometry\"\n  \n\nsetwd(\"/Users/drkmenon/\")\n\ngetwd()\n#> [1] \"/Users/drkmenon\"\nsetwd(\"/Users/drkmenon/Sync/books/biometry\")\ngetwd()\n#> [1] \"/Users/drkmenon/Sync/books/biometry\"\nlibrary(knitr)\nlibrary(tidyverse)\n#> ── Attaching packages ─────────────────── tidyverse 1.3.1 ──\n#> ✓ ggplot2 3.3.5     ✓ purrr   0.3.4\n#> ✓ tibble  3.1.5     ✓ dplyr   1.0.7\n#> ✓ tidyr   1.1.4     ✓ stringr 1.4.0\n#> ✓ readr   2.0.2     ✓ forcats 0.5.1\n#> ── Conflicts ────────────────────── tidyverse_conflicts() ──\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\nlibrary(epiR)\n#> Loading required package: survival\n#> Package epiR 2.0.39 is loaded\n#> Type help(epi.about) for summary information\n#> Type browseVignettes(package = 'epiR') to learn how to use epiR for applied epidemiological analyses\n#> \nlibrary(epiDisplay)\n#> Loading required package: foreign\n#> Loading required package: MASS\n#> \n#> Attaching package: 'MASS'\n#> The following object is masked from 'package:dplyr':\n#> \n#>     select\n#> Loading required package: nnet\n#> \n#> Attaching package: 'epiDisplay'\n#> The following object is masked from 'package:ggplot2':\n#> \n#>     alpha\nlibrary(survival)\nlibrary(survminer)\n#> Loading required package: ggpubr\nlibrary(randomizeR)\n#> Loading required package: plotrix\nx<- 2\nx\n#> [1] 2\ny<-\"male\"\ny\n#> [1] \"male\"\nclass(x)\n#> [1] \"numeric\"\nclass(y)\n#> [1] \"character\"\nx1<- c(1,2,3,4,5)\nx1\n#> [1] 1 2 3 4 5\nx1<-c(1:5)\nx1<-seq(from=1, to=5, by=1)\nx1\n#> [1] 1 2 3 4 5\nx2<-rep(1, times=5)\nx2\n#> [1] 1 1 1 1 1\n\nx3<-rep(seq(from=2, to=6, by=0.05), times=5)\nx3\n#>   [1] 2.00 2.05 2.10 2.15 2.20 2.25 2.30 2.35 2.40 2.45 2.50\n#>  [12] 2.55 2.60 2.65 2.70 2.75 2.80 2.85 2.90 2.95 3.00 3.05\n#>  [23] 3.10 3.15 3.20 3.25 3.30 3.35 3.40 3.45 3.50 3.55 3.60\n#>  [34] 3.65 3.70 3.75 3.80 3.85 3.90 3.95 4.00 4.05 4.10 4.15\n#>  [45] 4.20 4.25 4.30 4.35 4.40 4.45 4.50 4.55 4.60 4.65 4.70\n#>  [56] 4.75 4.80 4.85 4.90 4.95 5.00 5.05 5.10 5.15 5.20 5.25\n#>  [67] 5.30 5.35 5.40 5.45 5.50 5.55 5.60 5.65 5.70 5.75 5.80\n#>  [78] 5.85 5.90 5.95 6.00 2.00 2.05 2.10 2.15 2.20 2.25 2.30\n#>  [89] 2.35 2.40 2.45 2.50 2.55 2.60 2.65 2.70 2.75 2.80 2.85\n#> [100] 2.90 2.95 3.00 3.05 3.10 3.15 3.20 3.25 3.30 3.35 3.40\n#> [111] 3.45 3.50 3.55 3.60 3.65 3.70 3.75 3.80 3.85 3.90 3.95\n#> [122] 4.00 4.05 4.10 4.15 4.20 4.25 4.30 4.35 4.40 4.45 4.50\n#> [133] 4.55 4.60 4.65 4.70 4.75 4.80 4.85 4.90 4.95 5.00 5.05\n#> [144] 5.10 5.15 5.20 5.25 5.30 5.35 5.40 5.45 5.50 5.55 5.60\n#> [155] 5.65 5.70 5.75 5.80 5.85 5.90 5.95 6.00 2.00 2.05 2.10\n#> [166] 2.15 2.20 2.25 2.30 2.35 2.40 2.45 2.50 2.55 2.60 2.65\n#> [177] 2.70 2.75 2.80 2.85 2.90 2.95 3.00 3.05 3.10 3.15 3.20\n#> [188] 3.25 3.30 3.35 3.40 3.45 3.50 3.55 3.60 3.65 3.70 3.75\n#> [199] 3.80 3.85 3.90 3.95 4.00 4.05 4.10 4.15 4.20 4.25 4.30\n#> [210] 4.35 4.40 4.45 4.50 4.55 4.60 4.65 4.70 4.75 4.80 4.85\n#> [221] 4.90 4.95 5.00 5.05 5.10 5.15 5.20 5.25 5.30 5.35 5.40\n#> [232] 5.45 5.50 5.55 5.60 5.65 5.70 5.75 5.80 5.85 5.90 5.95\n#> [243] 6.00 2.00 2.05 2.10 2.15 2.20 2.25 2.30 2.35 2.40 2.45\n#> [254] 2.50 2.55 2.60 2.65 2.70 2.75 2.80 2.85 2.90 2.95 3.00\n#> [265] 3.05 3.10 3.15 3.20 3.25 3.30 3.35 3.40 3.45 3.50 3.55\n#> [276] 3.60 3.65 3.70 3.75 3.80 3.85 3.90 3.95 4.00 4.05 4.10\n#> [287] 4.15 4.20 4.25 4.30 4.35 4.40 4.45 4.50 4.55 4.60 4.65\n#> [298] 4.70 4.75 4.80 4.85 4.90 4.95 5.00 5.05 5.10 5.15 5.20\n#> [309] 5.25 5.30 5.35 5.40 5.45 5.50 5.55 5.60 5.65 5.70 5.75\n#> [320] 5.80 5.85 5.90 5.95 6.00 2.00 2.05 2.10 2.15 2.20 2.25\n#> [331] 2.30 2.35 2.40 2.45 2.50 2.55 2.60 2.65 2.70 2.75 2.80\n#> [342] 2.85 2.90 2.95 3.00 3.05 3.10 3.15 3.20 3.25 3.30 3.35\n#> [353] 3.40 3.45 3.50 3.55 3.60 3.65 3.70 3.75 3.80 3.85 3.90\n#> [364] 3.95 4.00 4.05 4.10 4.15 4.20 4.25 4.30 4.35 4.40 4.45\n#> [375] 4.50 4.55 4.60 4.65 4.70 4.75 4.80 4.85 4.90 4.95 5.00\n#> [386] 5.05 5.10 5.15 5.20 5.25 5.30 5.35 5.40 5.45 5.50 5.55\n#> [397] 5.60 5.65 5.70 5.75 5.80 5.85 5.90 5.95 6.00\nx1\n#> [1] 1 2 3 4 5\nx1[3]\n#> [1] 3\nx1[1:3]\n#> [1] 1 2 3\nx1[c(2,4)]\n#> [1] 2 4\nx1[-1]\n#> [1] 2 3 4 5\nm1<-matrix(c(1:20),nrow=5, byrow=T)\nm1\n#>      [,1] [,2] [,3] [,4]\n#> [1,]    1    2    3    4\n#> [2,]    5    6    7    8\n#> [3,]    9   10   11   12\n#> [4,]   13   14   15   16\n#> [5,]   17   18   19   20\nm1[c(2,3), 2]\n#> [1]  6 10\nname<-c(letters[1:10])\nage<-seq(from=63, to=82, by=2)\ntype_surg<- c(0,1,0,0,1,1,1,0,0,0)\ntype_surg<-as.factor(type_surg)\n\npri_event<-c(0,0,0,0,0,1,1,0,0,1)\npri_event<-as.factor(pri_event)\ntime<-c(24,24,24,24,24,3,2,24,24,7)\ntest_data<- data.frame(name,age,type_surg,pri_event,time)\ntest_data\n#>    name age type_surg pri_event time\n#> 1     a  63         0         0   24\n#> 2     b  65         1         0   24\n#> 3     c  67         0         0   24\n#> 4     d  69         0         0   24\n#> 5     e  71         1         0   24\n#> 6     f  73         1         1    3\n#> 7     g  75         1         1    2\n#> 8     h  77         0         0   24\n#> 9     i  79         0         0   24\n#> 10    j  81         0         1    7\nageo70<-test_data[age>70,]\nageo70\n#>    name age type_surg pri_event time\n#> 5     e  71         1         0   24\n#> 6     f  73         1         1    3\n#> 7     g  75         1         1    2\n#> 8     h  77         0         0   24\n#> 9     i  79         0         0   24\n#> 10    j  81         0         1    7"},{"path":"data-handling.html","id":"data-handling","chapter":"3 Data Handling","heading":"3 Data Handling","text":"first create concatenated strings variableR recognizes number series, covert factorlogic operations\nadd new row test_data2, cbind rbindother logic operations, test_data r basics script\nage >70?get answer 0 1multiple logic operationsadd data new columnClearing workspace inrremember import dataset.\nnew_datax<-read.csv(file.choose(), header = T)\ncreate table\ntable()","code":"\nname<-c(letters[1:10])\nage<-seq(from=63, to=82, by=2)\ntype_surg<- c(0,1,0,0,1,1,1,0,0,0)\ntype_surg<-as.factor(type_surg)\n\npri_event<-c(0,0,0,0,0,1,1,0,0,1)\npri_event<-as.factor(pri_event)\ntime<-c(24,24,24,24,24,3,2,24,24,7)\ntest_data<- data.frame(name,age,type_surg,pri_event,time)\ntest_data\n#>    name age type_surg pri_event time\n#> 1     a  63         0         0   24\n#> 2     b  65         1         0   24\n#> 3     c  67         0         0   24\n#> 4     d  69         0         0   24\n#> 5     e  71         1         0   24\n#> 6     f  73         1         1    3\n#> 7     g  75         1         1    2\n#> 8     h  77         0         0   24\n#> 9     i  79         0         0   24\n#> 10    j  81         0         1    7\nnew_data<-c(\"k\", 63,0,0,24)\nnew_data\n#> [1] \"k\"  \"63\" \"0\"  \"0\"  \"24\"\n\ntest_data2<-rbind(test_data,new_data)\ntest_data2\n#>    name age type_surg pri_event time\n#> 1     a  63         0         0   24\n#> 2     b  65         1         0   24\n#> 3     c  67         0         0   24\n#> 4     d  69         0         0   24\n#> 5     e  71         1         0   24\n#> 6     f  73         1         1    3\n#> 7     g  75         1         1    2\n#> 8     h  77         0         0   24\n#> 9     i  79         0         0   24\n#> 10    j  81         0         1    7\n#> 11    k  63         0         0   24\n\nnew_data2<-c(10:1)\ntest_data3<-cbind(test_data,new_data2)\ntest_data3\n#>    name age type_surg pri_event time new_data2\n#> 1     a  63         0         0   24        10\n#> 2     b  65         1         0   24         9\n#> 3     c  67         0         0   24         8\n#> 4     d  69         0         0   24         7\n#> 5     e  71         1         0   24         6\n#> 6     f  73         1         1    3         5\n#> 7     g  75         1         1    2         4\n#> 8     h  77         0         0   24         3\n#> 9     i  79         0         0   24         2\n#> 10    j  81         0         1    7         1\ntypage<-age>70\ntypage[1:5]\n#> [1] FALSE FALSE FALSE FALSE  TRUE\ntypage2<-as.numeric(age>70)\ntypage2  \n#>  [1] 0 0 0 0 1 1 1 1 1 1\noldtha<-age>70 & type_surg==\"1\"\noldtha\n#>  [1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n#> [10] FALSE\ntest_data\n#>    name age type_surg pri_event time\n#> 1     a  63         0         0   24\n#> 2     b  65         1         0   24\n#> 3     c  67         0         0   24\n#> 4     d  69         0         0   24\n#> 5     e  71         1         0   24\n#> 6     f  73         1         1    3\n#> 7     g  75         1         1    2\n#> 8     h  77         0         0   24\n#> 9     i  79         0         0   24\n#> 10    j  81         0         1    7\ntest_data5<-cbind(test_data,oldtha)\ntest_data5\n#>    name age type_surg pri_event time oldtha\n#> 1     a  63         0         0   24  FALSE\n#> 2     b  65         1         0   24  FALSE\n#> 3     c  67         0         0   24  FALSE\n#> 4     d  69         0         0   24  FALSE\n#> 5     e  71         1         0   24   TRUE\n#> 6     f  73         1         1    3   TRUE\n#> 7     g  75         1         1    2   TRUE\n#> 8     h  77         0         0   24  FALSE\n#> 9     i  79         0         0   24  FALSE\n#> 10    j  81         0         1    7  FALSE\nrm(list=ls())"},{"path":"data-cleaning.html","id":"data-cleaning","chapter":"4 Data Cleaning","heading":"4 Data Cleaning","text":"Main actions select(), filter(), group_by(), mutate(), summarise(),\nfull_join(), pivot_wide() pivot_long(), spread(), map(), strsplit(), broom()Use read_csv/read_tsv insted read.csv\ncreate tibble insted data framemagrittr (pipe function, keyboard short cut: command+shift+m)\n%>%\nselect() filter() functions help extract data study itggplot2: plotting\nggplot(aes()+geom_histogram()/geom_point()….mutatesummarise: extracts number variablesgroup bymake long data formmake long data formBoxplot ggplot2hash property id\nneed know map()function . map(x,~.), x = object ~. function goes vectorlist data frame\ncolumn multiple strings, can split vectors using strsplit()add column number facilities","code":"\nlibrary(tidyverse)\n#> ── Attaching packages ─────────────────── tidyverse 1.3.1 ──\n#> ✓ ggplot2 3.3.5     ✓ purrr   0.3.4\n#> ✓ tibble  3.1.5     ✓ dplyr   1.0.7\n#> ✓ tidyr   1.1.4     ✓ stringr 1.4.0\n#> ✓ readr   2.0.2     ✓ forcats 0.5.1\n#> ── Conflicts ────────────────────── tidyverse_conflicts() ──\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\nbooking= read_csv('data/bookings.csv')\n#> Rows: 10000 Columns: 8\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (3): booker_id, checkin_day, status\n#> dbl (4): property_id, room_nights, price_per_night, revi...\n#> lgl (1): for_business\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nproperty=read_csv('data/properties.csv')\n#> Rows: 4178 Columns: 5\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (3): destination, property_type, facilities\n#> dbl (2): property_id, nr_rooms\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nbooking\n#> # A tibble: 10,000 × 8\n#>    booker_id         property_id room_nights price_per_night\n#>    <chr>                   <dbl>       <dbl>           <dbl>\n#>  1 215934017ba98c09…        2668           4            91.5\n#>  2 7f590fd6d318248a…        4656           5           107. \n#>  3 10f0f138e8bb1015…        4563           6            87.0\n#>  4 7b55021a4160dde6…        4088           7            92.4\n#>  5 6694a79d158c7818…        2188           4           105. \n#>  6 d0358740d5f15e85…        4171           2           110. \n#>  7 944e568a0b511b91…        2907           4           116. \n#>  8 95476c2ef6bb9e3c…        5141           4           111. \n#>  9 df235631a4c281c0…        1696           1           106. \n#> 10 ff610140227d40d2…        1901           7            82.3\n#> # … with 9,990 more rows, and 4 more variables:\n#> #   checkin_day <chr>, for_business <lgl>, status <chr>,\n#> #   review_score <dbl>\nproperty\n#> # A tibble: 4,178 × 5\n#>    property_id destination property_type nr_rooms facilities\n#>          <dbl> <chr>       <chr>            <dbl> <chr>     \n#>  1        2668 Brisbane    Hotel               32 airport s…\n#>  2        4656 Brisbane    Hotel               39 on-site r…\n#>  3        4563 Brisbane    Apartment            9 laundry   \n#>  4        4088 Brisbane    Apartment            9 kitchen,l…\n#>  5        2188 Brisbane    Apartment            4 parking,k…\n#>  6        4171 Brisbane    Apartment            5 kitchen,p…\n#>  7        2907 Brisbane    Hotel               22 airport s…\n#>  8        5141 Brisbane    Hotel               20 breakfast…\n#>  9        1696 Brisbane    Apartment            5 free wifi…\n#> 10        1901 Brisbane    Apartment           11 free wifi…\n#> # … with 4,168 more rows\nx=booking %>% \n  select(review_score)\nx  \n#> # A tibble: 10,000 × 1\n#>    review_score\n#>           <dbl>\n#>  1        NA   \n#>  2        NA   \n#>  3         6.26\n#>  4         5.95\n#>  5         6.43\n#>  6        NA   \n#>  7         7.60\n#>  8        NA   \n#>  9         6.97\n#> 10        NA   \n#> # … with 9,990 more rows\n\ny=booking %>% \n  filter(status=='stayed'&!is.na(review_score))\ny\n#> # A tibble: 6,183 × 8\n#>    booker_id         property_id room_nights price_per_night\n#>    <chr>                   <dbl>       <dbl>           <dbl>\n#>  1 10f0f138e8bb1015…        4563           6            87.0\n#>  2 7b55021a4160dde6…        4088           7            92.4\n#>  3 6694a79d158c7818…        2188           4           105. \n#>  4 944e568a0b511b91…        2907           4           116. \n#>  5 df235631a4c281c0…        1696           1           106. \n#>  6 5a1442f4c7237ec5…        2307           9            84.2\n#>  7 39804a2e3fb2e4c6…        2907           6           112. \n#>  8 e150e559405ef29b…        2870           4           127. \n#>  9 4e9c7c21dfcf2758…        1674           5           102. \n#> 10 4a2b8eaf63613548…        2885           5            86.3\n#> # … with 6,173 more rows, and 4 more variables:\n#> #   checkin_day <chr>, for_business <lgl>, status <chr>,\n#> #   review_score <dbl>\n\ncheap=booking %>% \n  select(review_score,room_nights) %>% \n  filter(booking$price_per_night<80)\ncheap\n#> # A tibble: 434 × 2\n#>    review_score room_nights\n#>           <dbl>       <dbl>\n#>  1         8.90           5\n#>  2         5.87           6\n#>  3        NA              4\n#>  4        NA              7\n#>  5         6.02           4\n#>  6         9.64           6\n#>  7        NA              3\n#>  8        NA              4\n#>  9         6.23           5\n#> 10        NA              2\n#> # … with 424 more rows\n\n\nbooking %>% \n  filter(checkin_day=='wed') %>% \n  select(property_id,status) %>% \n  head(2)\n#> # A tibble: 2 × 2\n#>   property_id status   \n#>         <dbl> <chr>    \n#> 1        4563 stayed   \n#> 2        5141 cancelled\nbooking %>% \n  ggplot(\n    aes(review_score)\n  )+geom_histogram(bins = 100)\n#> Warning: Removed 3817 rows containing non-finite values\n#> (stat_bin).\n\nbooking %>% \n  ggplot(\n    aes(price_per_night,review_score)\n  )+geom_point()\n#> Warning: Removed 3817 rows containing missing values\n#> (geom_point).\n\nbooking %>% \n  filter(room_nights>7, status=='stayed') %>% \n  select(price_per_night,review_score) %>% \n  ggplot(\n    aes(price_per_night,review_score)\n  )+geom_point()\n#> Warning: Removed 41 rows containing missing values\n#> (geom_point).\nbooking %>% \n  mutate(centered_mean=price_per_night-mean(price_per_night)) %>% \n  head(2)\n#> # A tibble: 2 × 9\n#>   booker_id          property_id room_nights price_per_night\n#>   <chr>                    <dbl>       <dbl>           <dbl>\n#> 1 215934017ba98c09f…        2668           4            91.5\n#> 2 7f590fd6d318248a4…        4656           5           107. \n#> # … with 5 more variables: checkin_day <chr>,\n#> #   for_business <lgl>, status <chr>, review_score <dbl>,\n#> #   centered_mean <dbl>\nbooking %>% \n  summarise(\n    n()\n    , n_miss=sum(is.na(review_score))\n    ,mean_score=mean(review_score,na.rm=T))\n#> # A tibble: 1 × 3\n#>   `n()` n_miss mean_score\n#>   <int>  <int>      <dbl>\n#> 1 10000   3817       7.22\n\nbooking %>% \n  summarise(\n    n()\n    , stayed_booking=sum(status=='stayed')\n    , mean_total=mean(price_per_night*room_nights)                   \n    \n  )\n#> # A tibble: 1 × 3\n#>   `n()` stayed_booking mean_total\n#>   <int>          <int>      <dbl>\n#> 1 10000           7775       348.\nbooking %>% \n  group_by(\n    for_business\n  ) %>% \n  summarise(\n    n=n()\n    , mean_review=mean(review_score,na.rm=T))\n#> # A tibble: 2 × 3\n#>   for_business     n mean_review\n#>   <lgl>        <int>       <dbl>\n#> 1 FALSE         6285        7.50\n#> 2 TRUE          3715        6.85\n\nmixed=booking %>% \n  full_join(property) %>% \n  count(destination,checkin_day) %>% \n  pivot_wider(\n    names_from = checkin_day,values_from = n\n  )\n#> Joining, by = \"property_id\"\nmixed \n#> # A tibble: 3 × 8\n#>   destination   fri   mon   sat   sun   thu   tue   wed\n#>   <chr>       <int> <int> <int> <int> <int> <int> <int>\n#> 1 Amsterdam    1074   517   889   813   667   498   542\n#> 2 Brisbane      162   133   114   153   162   148   128\n#> 3 Tokyo         451   718   322   576   718   655   560\nlong=mixed%>%\n  pivot_longer(cols = 2:8, names_to = 'day',values_to = 'count')\nlong\n#> # A tibble: 21 × 3\n#>    destination day   count\n#>    <chr>       <chr> <int>\n#>  1 Amsterdam   fri    1074\n#>  2 Amsterdam   mon     517\n#>  3 Amsterdam   sat     889\n#>  4 Amsterdam   sun     813\n#>  5 Amsterdam   thu     667\n#>  6 Amsterdam   tue     498\n#>  7 Amsterdam   wed     542\n#>  8 Brisbane    fri     162\n#>  9 Brisbane    mon     133\n#> 10 Brisbane    sat     114\n#> # … with 11 more rows\nwide= long %>% \n  pivot_wider(names_from = \"day\", values_from = \"count\")\nwide\n#> # A tibble: 3 × 8\n#>   destination   fri   mon   sat   sun   thu   tue   wed\n#>   <chr>       <int> <int> <int> <int> <int> <int> <int>\n#> 1 Amsterdam    1074   517   889   813   667   498   542\n#> 2 Brisbane      162   133   114   153   162   148   128\n#> 3 Tokyo         451   718   322   576   718   655   560\nbooking %>% \n  ggplot(\n    aes(\n      review_score,for_business\n    )\n  )+geom_boxplot()\n#> Warning: Removed 3817 rows containing non-finite values\n#> (stat_boxplot).\nlibrary(digest)\n\nproperty %>% \n  mutate(property_id=map_chr(property_id,digest))\n#> # A tibble: 4,178 × 5\n#>    property_id destination property_type nr_rooms facilities\n#>    <chr>       <chr>       <chr>            <dbl> <chr>     \n#>  1 c5fe5a36c3… Brisbane    Hotel               32 airport s…\n#>  2 6abfc65c14… Brisbane    Hotel               39 on-site r…\n#>  3 8740143b90… Brisbane    Apartment            9 laundry   \n#>  4 e30b95c1ec… Brisbane    Apartment            9 kitchen,l…\n#>  5 ab19240af8… Brisbane    Apartment            4 parking,k…\n#>  6 b2efd881c3… Brisbane    Apartment            5 kitchen,p…\n#>  7 d49c23b12c… Brisbane    Hotel               22 airport s…\n#>  8 1fd9f14595… Brisbane    Hotel               20 breakfast…\n#>  9 7319c32a43… Brisbane    Apartment            5 free wifi…\n#> 10 a38cc66d5f… Brisbane    Apartment           11 free wifi…\n#> # … with 4,168 more rows\nproperty %>% \n  mutate(facilities=strsplit(facilities,\",\"))\n#> # A tibble: 4,178 × 5\n#>    property_id destination property_type nr_rooms facilities\n#>          <dbl> <chr>       <chr>            <dbl> <list>    \n#>  1        2668 Brisbane    Hotel               32 <chr [6]> \n#>  2        4656 Brisbane    Hotel               39 <chr [7]> \n#>  3        4563 Brisbane    Apartment            9 <chr [1]> \n#>  4        4088 Brisbane    Apartment            9 <chr [3]> \n#>  5        2188 Brisbane    Apartment            4 <chr [5]> \n#>  6        4171 Brisbane    Apartment            5 <chr [6]> \n#>  7        2907 Brisbane    Hotel               22 <chr [8]> \n#>  8        5141 Brisbane    Hotel               20 <chr [8]> \n#>  9        1696 Brisbane    Apartment            5 <chr [6]> \n#> 10        1901 Brisbane    Apartment           11 <chr [8]> \n#> # … with 4,168 more rows\nproperty$facilities[1]\n#> [1] \"airport shuttle,free wifi,garden,breakfast,pool,on-site restaurant\"\nproperty %>%\n  mutate(facilities=strsplit(facilities,\",\")) %>% \n  mutate(n_facility=map_int(facilities,length))\n#> # A tibble: 4,178 × 6\n#>    property_id destination property_type nr_rooms facilities\n#>          <dbl> <chr>       <chr>            <dbl> <list>    \n#>  1        2668 Brisbane    Hotel               32 <chr [6]> \n#>  2        4656 Brisbane    Hotel               39 <chr [7]> \n#>  3        4563 Brisbane    Apartment            9 <chr [1]> \n#>  4        4088 Brisbane    Apartment            9 <chr [3]> \n#>  5        2188 Brisbane    Apartment            4 <chr [5]> \n#>  6        4171 Brisbane    Apartment            5 <chr [6]> \n#>  7        2907 Brisbane    Hotel               22 <chr [8]> \n#>  8        5141 Brisbane    Hotel               20 <chr [8]> \n#>  9        1696 Brisbane    Apartment            5 <chr [6]> \n#> 10        1901 Brisbane    Apartment           11 <chr [8]> \n#> # … with 4,168 more rows, and 1 more variable:\n#> #   n_facility <int>"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
